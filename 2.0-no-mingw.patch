--- origsrc/mono-2.0/configure.in	2008-09-02 10:42:56.000000000 -0500
+++ src/mono-2.0/configure.in	2008-10-06 02:45:16.607978800 -0500
@@ -14,11 +14,6 @@
 
 AC_PROG_LN_S
 
-# In case of cygwin, override LN_S, irrespective of what it determines.
-# The build uses cygwin, but the actual runtime doesn't.
-case $host_os in
-*cygwin* ) LN_S='cp -p';;
-esac
 
 
 dnl
@@ -66,7 +61,17 @@
 AC_MSG_CHECKING([host platform characteristics])
 libgc_threads=no
 case "$host" in
-	*-*-mingw*|*-*-cygwin*)
+	*-*-cygwin*)
+		platform_win32=no
+		CPPFLAGS="$CPPFLAGS -D_GNU_SOURCE -D_REENTRANT"
+		libmono_cflags="-D_REENTRANT"
+		libmono_ldflags="-lpthread"
+		libdl=""
+		gc_default=boehm
+		with_nptl=default
+		with_sigaltstack=no
+		;;
+	*-*-mingw*)
 		platform_win32=yes
 		AC_DEFINE(PLATFORM_WIN32,1,[Platform is Win32])
 		if test "x$cross_compiling" = "xno"; then
@@ -1613,7 +1623,7 @@
 
 dnl Win32 does not have /dev/random, they have their own method...
 
-    *-*-mingw*|*-*-cygwin*)
+    *-*-mingw*)
     ac_cv_have_dev_random=no
     ;;
 
@@ -1954,6 +1968,14 @@
 libsuffix=".so"
 
 case "$host" in
+     *-*-*cygwin*)
+	libsuffix=".dll"
+	LIBC="cygwin1.dll"
+	INTL="cygintl-8.dll"
+	SQLITE="cygsqlite-0.dll"
+	SQLITE3="cygsqlite3-0.dll"
+	X11="cygX11-6.dll"
+	;;
      *-*-darwin*)
 	libsuffix=".dylib"
 	LIBC="libc.dylib"
--- origsrc/mono-2.0/mono/metadata/mono-config.c	2008-09-02 10:42:41.000000000 -0500
+++ src/mono-2.0/mono/metadata/mono-config.c	2008-10-06 04:21:17.480611600 -0500
@@ -36,6 +36,8 @@
 #define CONFIG_OS "aix"
 #elif defined(__hpux)
 #define CONFIG_OS "hpux"
+#elif defined(__CYGWIN__)
+#define CONFIG_OS "cygwin"
 #else
 #warning Unknown operating system
 #define CONFIG_OS "unknownOS"
--- origsrc/mono-2.0/mono/mini/mini-x86.h	2008-09-02 10:42:54.000000000 -0500
+++ src/mono-2.0/mono/mini/mini-x86.h	2008-10-06 02:45:16.686101800 -0500
@@ -2,13 +2,8 @@
 #define __MONO_MINI_X86_H__
 
 #include <mono/arch/x86/x86-codegen.h>
-#ifdef PLATFORM_WIN32
-#include <windows.h>
-/* use SIG* defines if possible */
-#ifdef HAVE_SIGNAL_H
-#include <signal.h>
-#endif
 
+#if defined(PLATFORM_WIN32) || defined(__CYGWIN__)
 /* sigcontext surrogate */
 struct sigcontext {
 	unsigned int eax;
@@ -21,6 +16,14 @@
 	unsigned int edi;
 	unsigned int eip;
 };
+#endif
+
+#ifdef PLATFORM_WIN32
+#include <windows.h>
+/* use SIG* defines if possible */
+#ifdef HAVE_SIGNAL_H
+#include <signal.h>
+#endif
 
 typedef void (* MonoW32ExceptionHandler) (int);
 void win32_seh_init(void);
--- origsrc/mono-2.0/mono/utils/mono-dl.c	2008-09-02 10:42:54.000000000 -0500
+++ src/mono-2.0/mono/utils/mono-dl.c	2008-10-06 02:45:16.748600200 -0500
@@ -19,6 +19,11 @@
 	".so",
 	".bundle"
 };
+#elif defined(__CYGWIN__)
+#define SOPREFIX "cyg"
+static const char suffixes [][5] = {
+	".dll"
+};
 #else
 #define SOPREFIX "lib"
 static const char suffixes [][4] = {
