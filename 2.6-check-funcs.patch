--- origsrc/mono-2.6.4/configure.in	2010-06-28 15:08:35.991650600 -0500
+++ src/mono-2.6.4/configure.in	2010-06-28 16:19:14.994107700 -0500
@@ -1593,6 +1593,10 @@ if test x$platform_win32 = xno; then
 	AC_CHECK_FUNCS(stime)
 	AC_CHECK_FUNCS(strerror_r)
 	AC_CHECK_FUNCS(ttyname_r)
+	AC_CHECK_FUNCS(confstr)
+	AC_CHECK_FUNCS(mincore)
+	AC_CHECK_FUNCS(psignal)
+	AC_CHECK_FUNCS(sethostname)
 	AC_CHECK_SIZEOF(size_t)
 	AC_CHECK_TYPES([blksize_t], [AC_DEFINE(HAVE_BLKSIZE_T)], , 
 		[#include <sys/types.h>
--- origsrc/mono-2.6.4/support/signal.c	2010-04-22 10:37:47.000000000 -0500
+++ src/mono-2.6.4/support/signal.c	2010-06-28 15:08:50.058455200 -0500
@@ -120,6 +120,7 @@ int Mono_Posix_FromRealTimeSignum (int o
 	#define mph_int_set(p,o,n) do { *(p) = n; } while (0)
 #endif
 
+#ifdef HAVE_PSIGNAL
 int
 Mono_Posix_Syscall_psignal (int sig, const char* s)
 {
@@ -127,6 +128,7 @@ Mono_Posix_Syscall_psignal (int sig, con
 	psignal (sig, s);
 	return errno == 0 ? 0 : -1;
 }
+#endif
 
 #define NUM_SIGNALS 64
 static signal_info signals[NUM_SIGNALS];
--- origsrc/mono-2.6.4/support/sys-mman.c	2010-04-22 10:37:47.000000000 -0500
+++ src/mono-2.6.4/support/sys-mman.c	2010-06-28 15:08:50.063455500 -0500
@@ -101,6 +101,7 @@ Mono_Posix_Syscall_mremap (void *old_add
 }
 #endif /* def HAVE_MREMAP */
 
+#ifdef HAVE_MINCORE
 int
 Mono_Posix_Syscall_mincore (void *start, mph_size_t length, unsigned char *vec)
 {
@@ -108,6 +109,7 @@ Mono_Posix_Syscall_mincore (void *start,
 
 	return mincore (start, (size_t) length, vec);
 }
+#endif /* def HAVE_MINCORE */
 
 #ifdef HAVE_POSIX_MADVISE
 gint32
--- origsrc/mono-2.6.4/support/unistd.c	2010-04-22 10:37:47.000000000 -0500
+++ src/mono-2.6.4/support/unistd.c	2010-06-28 15:08:50.068455800 -0500
@@ -116,6 +116,7 @@ Mono_Posix_Syscall_sysconf (int name, in
 	return sysconf (name);
 }
 
+#ifdef HAVE_CONFSTR
 mph_size_t
 Mono_Posix_Syscall_confstr (int name, char *buf, mph_size_t len)
 {
@@ -124,6 +125,7 @@ Mono_Posix_Syscall_confstr (int name, ch
 		return -1;
 	return confstr (name, buf, (size_t) len);
 }
+#endif /* def HAVE_CONFSTR */
 
 #ifdef HAVE_TTYNAME_R
 gint32
@@ -159,12 +161,14 @@ Mono_Posix_Syscall_gethostname (char *bu
 	return gethostname (buf, (size_t) len);
 }
 
+#ifdef HAVE_SETHOSTNAME
 gint32
 Mono_Posix_Syscall_sethostname (const char *name, mph_size_t len)
 {
 	mph_return_if_size_t_overflow (len);
 	return sethostname (name, (size_t) len);
 }
+#endif /* def HAVE_SETHOSTNAME */
 
 gint64
 Mono_Posix_Syscall_gethostid (void)
